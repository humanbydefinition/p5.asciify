!function(A,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("p5")):"function"==typeof define&&define.amd?define(["p5"],e):(A="undefined"!=typeof globalThis?globalThis:A||self).P5Asciify=e(A.p5)}(this,(function(A){"use strict";class e{constructor(A,e){this._name=A,this._shader=e,this._enabled=!0}setup(){}setUniforms(A,e){this._shader.setUniform("u_image",A)}get shader(){return this._shader}set shader(A){this._shader=A}get name(){return this._name}get enabled(){return this._enabled}set enabled(A){this._enabled=A}}class t extends e{constructor({shader:A,brightness:e}){super("brightness",A),this._brightness=e}setUniforms(A){super.setUniforms(A),this._shader.setUniform("u_brightness",this._brightness)}set brightness(A){this._brightness=A}get brightness(){return this._brightness}}class r extends e{constructor({shader:A,amount:e,angle:t}){super("chromaticaberration",A),this._amount=e,this._angle=t}setUniforms(A){super.setUniforms(A),this._shader.setUniform("u_aberrationAmount",this._amount),this._shader.setUniform("u_aberrationAngle",this._angle*Math.PI/180)}set amount(A){this._amount=A}set angle(A){this._angle=A}get amount(){return this._amount}get angle(){return this._angle}}class o{constructor(){this.palettes={},this.paletteRows={},this.nextId=0}setup(){this.texture=this.p5Instance.createFramebuffer({width:1,height:1,depthFormat:this.p5Instance.UNSIGNED_INT,textureFiltering:this.p5Instance.NEAREST}),Object.keys(this.palettes).length>0&&this.updateTexture()}addInstance(A){this.p5Instance=A}updateTexture(){let A=Object.values(this.palettes),e=A.reduce(((A,e)=>Math.max(A,e.length)),1);this.texture.resize(e,A.length),this.texture.loadPixels();let t=0;for(let A in this.palettes){let r=this.palettes[A].map((A=>this.p5Instance.color(A)));this.paletteRows[A]=t;for(let A=0;A<r.length;A++){let o=4*(t*e+A),i=r[A];this.texture.pixels[o]=this.p5Instance.red(i),this.texture.pixels[o+1]=this.p5Instance.green(i),this.texture.pixels[o+2]=this.p5Instance.blue(i),this.texture.pixels[o+3]=this.p5Instance.alpha(i)}for(let A=r.length;A<e;A++){let r=4*(t*e+A);this.texture.pixels[r]=0,this.texture.pixels[r+1]=0,this.texture.pixels[r+2]=0,this.texture.pixels[r+3]=0}t++}this.texture.updatePixels()}addPalette(A){const e="palette-"+this.nextId++;return this.palettes[e]=A,this.updateTexture(),e}removePalette(A){this.palettes[A]?(delete this.palettes[A],delete this.paletteRows[A],frameCount>0&&this.updateTexture()):console.warn(`Palette with ID ${A} does not exist`)}setPaletteColors(A,e){this.palettes[A]?(this.palettes[A]=e,frameCount>0&&this.updateTexture()):console.warn(`Palette with ID ${A} does not exist`)}getPaletteRow(A){return void 0!==this.paletteRows[A]?this.paletteRows[A]:-1}}class i extends e{constructor({shader:A,palette:e,colorPalette:t}){super("colorpalette",A),this._palette=e,this.colorPalette=t}setup(){this._paletteId=this.colorPalette.addPalette(this._palette)}setUniforms(A){super.setUniforms(A),this._shader.setUniform("u_resolution",[A.width,A.height]),this._shader.setUniform("u_colorPalette",this.colorPalette.texture),this._shader.setUniform("u_colorPaletteRow",this.colorPalette.getPaletteRow(this._paletteId)),this._shader.setUniform("u_colorPaletteDimensions",[this.colorPalette.texture.width,this.colorPalette.texture.height]),this._shader.setUniform("u_colorPaletteLength",this._palette.length)}set palette(A){this._palette=A,this.colorPalette.setPaletteColors(this._paletteId,this._palette)}get palette(){return this._palette}}class s extends e{constructor({shader:A,frequency:e,amplitude:t}){super("distortion",A),this._frequency=e,this._amplitude=t}setUniforms(A,e){super.setUniforms(A),this._shader.setUniform("u_frequency",this._frequency),this._shader.setUniform("u_amplitude",this._amplitude),this._shader.setUniform("u_time",.01*e)}set frequency(A){this._frequency=A}set amplitude(A){this._amplitude=A}get frequency(){return this._frequency}get amplitude(){return this._amplitude}}class n extends e{constructor({shader:A}){super("grayscale",A)}}class g extends e{constructor({shader:A}){super("invert",A)}}class a extends e{constructor({shader:A,segments:e,angle:t}){super("kaleidoscope",A),this._segments=e,this._angle=t}setUniforms(A){super.setUniforms(A),this._shader.setUniform("u_segments",this._segments),this._shader.setUniform("u_angle",this._angle*Math.PI/180)}set segments(A){this._segments=A}set angle(A){this._angle=A}get segments(){return this._segments}get angle(){return this._angle}}class B extends e{constructor({shader:A,angle:e}){super("rotate",A),this._angle=e}setUniforms(A){super.setUniforms(A),this._shader.setUniform("u_angle",this._angle*Math.PI/180)}set angle(A){this._angle=A}get angle(){return this._angle}}var E="precision lowp float;\n#define GLSLIFY 1\nattribute vec3 aPosition;attribute vec2 aTexCoord;varying vec2 v_texCoord;void main(){vec4 positionVec4=vec4(aPosition,1.0);positionVec4.xy=positionVec4.xy*2.0-1.0;gl_Position=positionVec4;v_texCoord=aTexCoord;}";class Q{effectParams={kaleidoscope:{segments:2,angle:0},distortion:{frequency:.1,amplitude:.1},grayscale:{},invert:{},chromaticaberration:{amount:.1,angle:0},rotate:{angle:0},brightness:{brightness:0},colorpalette:{palette:["#0f380f","#306230","#8bac0f","#9bbc0f"]}};effectShaders={kaleidoscope:"precision lowp float;\n#define GLSLIFY 1\nuniform sampler2D u_image;uniform int u_segments;uniform float u_angle;\n#define PI 3.1415926535897932384626433832795\nvarying vec2 v_texCoord;void main(){if(u_segments==1){vec2 mirroredCoord=v_texCoord;if(v_texCoord.x>0.5){mirroredCoord.x=1.0-mirroredCoord.x;}vec4 color=texture2D(u_image,mirroredCoord);gl_FragColor=color;}else{float angle=2.0*PI/float(u_segments);vec2 centeredCoord=v_texCoord-0.5;float currentAngle=atan(centeredCoord.y,centeredCoord.x);float radius=length(centeredCoord);currentAngle=mod(currentAngle,angle);currentAngle=angle/2.0-abs(currentAngle-angle/2.0);currentAngle+=u_angle;vec2 rotatedCoord=vec2(cos(currentAngle),sin(currentAngle))*radius;vec2 finalCoord=rotatedCoord+0.5;vec4 color=texture2D(u_image,finalCoord);gl_FragColor=color;}}",distortion:"precision highp float;\n#define GLSLIFY 1\nuniform sampler2D u_image;uniform float u_time;uniform float u_frequency;uniform float u_amplitude;varying vec2 v_texCoord;void main(){vec2 uv=v_texCoord;float sineWave=sin(uv.y*u_frequency+u_time)*u_amplitude;vec2 distort=vec2(sineWave,sineWave);vec4 texColor=texture2D(u_image,mod(uv+distort,1.0));gl_FragColor=texColor;}",grayscale:"precision highp float;\n#define GLSLIFY 1\nuniform sampler2D u_image;varying vec2 v_texCoord;void main(){vec4 color=texture2D(u_image,v_texCoord);float luminance=0.299*color.r+0.587*color.g+0.114*color.b;color.rgb=vec3(luminance);gl_FragColor=color;}",invert:"precision highp float;\n#define GLSLIFY 1\nuniform sampler2D u_image;varying vec2 v_texCoord;void main(){vec4 color=texture2D(u_image,v_texCoord);color.rgb=1.0-color.rgb;gl_FragColor=color;}",chromaticaberration:"precision highp float;\n#define GLSLIFY 1\nuniform sampler2D u_image;uniform float u_aberrationAmount;uniform float u_aberrationAngle;varying vec2 v_texCoord;void main(){vec2 redOffset=vec2(u_aberrationAmount*cos(u_aberrationAngle),u_aberrationAmount*sin(u_aberrationAngle));vec2 greenOffset=vec2(0.0,0.0);vec2 blueOffset=vec2(-u_aberrationAmount*cos(u_aberrationAngle),-u_aberrationAmount*sin(u_aberrationAngle));float red=texture2D(u_image,v_texCoord+redOffset).r;float green=texture2D(u_image,v_texCoord+greenOffset).g;float blue=texture2D(u_image,v_texCoord+blueOffset).b;vec4 color=vec4(red,green,blue,1.0);gl_FragColor=color;}",rotate:"precision highp float;\n#define GLSLIFY 1\nuniform sampler2D u_image;uniform float u_angle;varying vec2 v_texCoord;void main(){vec2 centeredCoord=v_texCoord-0.5;vec2 rotatedCoord;rotatedCoord.x=centeredCoord.x*cos(u_angle)-centeredCoord.y*sin(u_angle);rotatedCoord.y=centeredCoord.x*sin(u_angle)+centeredCoord.y*cos(u_angle);vec2 finalCoord=rotatedCoord+0.5;finalCoord.y=1.0-finalCoord.y;vec4 color=texture2D(u_image,finalCoord);gl_FragColor=color;}",brightness:"precision highp float;\n#define GLSLIFY 1\nuniform sampler2D u_image;uniform float u_brightness;varying vec2 v_texCoord;void main(){vec4 color=texture2D(u_image,v_texCoord);color.rgb+=u_brightness;color.rgb=clamp(color.rgb,0.0,1.0);gl_FragColor=color;}",colorpalette:"precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D u_image;uniform sampler2D u_colorPalette;uniform vec2 u_colorPaletteDimensions;uniform int u_colorPaletteRow;uniform float u_colorPaletteLength;uniform vec2 u_resolution;void main(){vec2 uv=gl_FragCoord.xy/u_resolution;vec4 texColor=texture2D(u_image,uv);float gray=(texColor.r+texColor.g+texColor.b)/3.0;float paletteX=gray*(u_colorPaletteLength-1.0);float paletteTexelPosition=(floor(paletteX)+0.5)/u_colorPaletteDimensions.x;float rowPosition=float(u_colorPaletteRow)+0.5;float rowTexCoord=rowPosition/u_colorPaletteDimensions.y;vec4 paletteColor=texture2D(u_colorPalette,vec2(paletteTexelPosition,rowTexCoord));gl_FragColor=paletteColor;}"};effectConstructors={kaleidoscope:({shader:A,params:e})=>new a({shader:A,...e}),distortion:({shader:A,params:e})=>new s({shader:A,...e}),grayscale:({shader:A,params:e})=>new n({shader:A,...e}),invert:({shader:A,params:e})=>new g({shader:A,...e}),chromaticaberration:({shader:A,params:e})=>new r({shader:A,...e}),rotate:({shader:A,params:e})=>new B({shader:A,...e}),brightness:({shader:A,params:e})=>new t({shader:A,...e}),colorpalette:({shader:A,params:e})=>new i({shader:A,...e,colorPalette:this.colorPalette})};_setupQueue=[];constructor(A){this.colorPalette=A,this._effects=[]}addInstance(A){this.p5Instance=A}setup(){this.prevFramebuffer=this.p5Instance.createFramebuffer({depthFormat:this.p5Instance.UNSIGNED_INT,textureFiltering:this.p5Instance.NEAREST}),this.nextFramebuffer=this.p5Instance.createFramebuffer({depthFormat:this.p5Instance.UNSIGNED_INT,textureFiltering:this.p5Instance.NEAREST}),this.setupShaders(),this.setupEffectQueue()}render(A){this.prevFramebuffer.begin(),this.p5Instance.clear(),this.p5Instance.image(A,-this.p5Instance.width/2,-this.p5Instance.height/2,this.p5Instance.width,this.p5Instance.height),this.prevFramebuffer.end(),this.nextFramebuffer.begin(),this.p5Instance.clear(),this.p5Instance.image(A,-this.p5Instance.width/2,-this.p5Instance.height/2,this.p5Instance.width,this.p5Instance.height),this.nextFramebuffer.end();for(const A of this._effects)A.enabled&&([this.prevFramebuffer,this.nextFramebuffer]=[this.nextFramebuffer,this.prevFramebuffer],this.nextFramebuffer.begin(),this.p5Instance.shader(A.shader),A.setUniforms(this.prevFramebuffer,this.p5Instance.frameCount),this.p5Instance.rect(0,0,this.p5Instance.width,this.p5Instance.height),this.nextFramebuffer.end())}setupShaders(){for(let A in this.effectShaders)this.effectShaders[A]=this.p5Instance.createShader(E,this.effectShaders[A])}setupEffectQueue(){for(let A of this._setupQueue)A.setup(),A.shader=this.effectShaders[A.name]}addExistingEffectAtIndex(A,e){A.shader=this.effectShaders[A.name],this._effects.splice(e,0,A),0===this.p5Instance.frameCount&&this._setupQueue.push(A)}getEffectIndex(A){return this._effects.indexOf(A)}addEffect(A,e={}){const t=0===this.p5Instance.frameCount?null:this.effectShaders[A],r={...this.effectParams[A],...e},o=this.effectConstructors[A]({shader:t,params:r});return this._effects.push(o),0===this.p5Instance.frameCount?this._setupQueue.push(o):o.setup(),o}removeEffect(A){this._effects.splice(this._effects.indexOf(A),1)}hasEffect(A){return this._effects.includes(A)}swapEffects(A,e){const t=this._effects.indexOf(A),r=this._effects.indexOf(e);[this._effects[t],this._effects[r]]=[this._effects[r],this._effects[t]]}getEffects(){return this._effects}}class h extends Error{constructor(A){super(A),this.name="P5AsciifyError"}}class c{setup({p5Instance:A,type:e,font:t,characters:r,fontSize:o}){this.p5Instance=A,this.type=e,this.font=t,this.fontSize=o,this.fontGlyphs=Object.values(this.font.font.glyphs.glyphs).filter((A=>void 0!==A.unicode)),this.characters=this.validateCharacters(r),this.characterGlyphs=this.loadCharacterGlyphs(),this.maxGlyphDimensions=this.getMaxGlyphDimensions(this.fontSize),this.createTexture(this.fontSize)}loadCharacterGlyphs(){let A=Object.values(this.font.font.glyphs.glyphs).filter((A=>void 0!==A.unicode)),e=new Map(this.characters.map(((A,e)=>[A,e]))),t=A.filter((A=>A.unicodes.some((A=>this.characters.includes(String.fromCharCode(A)))))).sort(((A,t)=>e.get(String.fromCharCode(A.unicodes[0]))-e.get(String.fromCharCode(t.unicodes[0]))));return t.forEach(((A,e)=>{A.r=e%256,A.g=Math.floor(e/256)%256,A.b=Math.floor(e/65536)})),t}getMaxGlyphDimensions(A){return this.fontGlyphs.reduce(((e,t)=>{const r=t.getPath(0,0,A).getBoundingBox();return{width:Math.ceil(Math.max(e.width,r.x2-r.x1)),height:Math.ceil(Math.max(e.height,r.y2-r.y1))}}),{width:0,height:0})}setFontObject(A){this.font=A,this.fontGlyphs=Object.values(this.font.font.glyphs.glyphs).filter((A=>void 0!==A.unicode)),this.characterGlyphs=this.loadCharacterGlyphs(),this.maxGlyphDimensions=this.getMaxGlyphDimensions(this.fontSize),this.createTexture(this.fontSize)}setCharacterSet(A){this.characters=this.validateCharacters(A),this.characterGlyphs=this.loadCharacterGlyphs(),this.createTexture(this.fontSize)}setCharacter({character:A,index:e}){this.characters[e]=A,this.characterGlyphs=this.loadCharacterGlyphs(),this.createTexture(this.fontSize)}getUnsupportedCharacters(A){return Array.from(new Set(Array.from(A).filter((A=>!this.fontGlyphs.some((e=>e.unicodes.includes(A.codePointAt(0))))))))}setFontSize(A){this.fontSize=A,this.maxGlyphDimensions=this.getMaxGlyphDimensions(this.fontSize),this.createTexture(this.fontSize)}createTexture(A){this.charsetCols=Math.ceil(Math.sqrt(this.characters.length)),this.charsetRows=Math.ceil(this.characters.length/this.charsetCols);let e=this.getMaxGlyphDimensions(A);this.texture?this.texture.resize(e.width*this.charsetCols,e.height*this.charsetRows):this.texture=this.p5Instance.createFramebuffer({width:e.width*this.charsetCols,height:e.height*this.charsetRows,depthFormat:this.p5Instance.UNSIGNED_INT,textureFiltering:this.p5Instance.NEAREST}),this.texture.begin(),this.drawCharacters(A,e),this.texture.end()}validateCharacters(A){let e=this.getUnsupportedCharacters(A);if(e.length>0)throw new h(`The following ${this.type} characters are not supported by the current font: [${e.join(", ")}].`);return Array.from(A)}drawCharacters(A,e){this.p5Instance.clear(),this.p5Instance.textFont(this.font),this.p5Instance.fill(255),this.p5Instance.textSize(A),this.p5Instance.textAlign(this.p5Instance.LEFT,this.p5Instance.TOP),this.p5Instance.noStroke();for(let A=0;A<this.characters.length;A++){const t=A%this.charsetCols,r=Math.floor(A/this.charsetCols),o=e.width*t-e.width*this.charsetCols/2,i=e.height*r-e.height*this.charsetRows/2;this.p5Instance.text(this.characters[A],o,i)}}getCharsetColorArray(A){let e=[];for(let t=0;t<A.length;t++){let r=A.charAt(t),o=this.characterGlyphs.find((A=>A.unicodes.includes(r.codePointAt(0))));if(!o)throw new Error("Could not find character in character set: "+r+".");e.push([o.r,o.g,o.b])}return e}appendCharacterSet(A){let e=new Set(this.characters);for(let t of A)e.add(t);this.characters=Array.from(e),this.characterGlyphs=this.loadCharacterGlyphs(),this.createTexture(this.fontSize)}}class l{constructor({cellWidth:A,cellHeight:e}){this.cellWidth=A,this.cellHeight=e}addInstance(A){this.p5Instance=A}reset(){let[A,e]=this._calculateGridCellDimensions();this.cols=A,this.rows=e,this._resizeGrid()}_resizeGrid(){this.width=this.cols*this.cellWidth,this.height=this.rows*this.cellHeight,this.offsetX=Math.floor((this.p5Instance.width-this.width)/2),this.offsetY=Math.floor((this.p5Instance.height-this.height)/2)}_calculateGridCellDimensions(){return[Math.floor(this.p5Instance.width/this.cellWidth),Math.floor(this.p5Instance.height/this.cellHeight)]}resizeCellPixelDimensions(A,e){this.cellWidth=A,this.cellHeight=e,this.reset()}resizeCellDimensions(A,e){const[t,r]=this._calculateGridCellDimensions();if(A>t||e>r)return console.warn(`The defined grid dimensions exceed the maximum dimensions of the grid. The maximum dimensions for the given font(size) and sketch dimensions are ${t} x ${r}. Resetting to default dimensions.`),void this.reset();this.cols=A,this.rows=e,this._resizeGrid()}}class C{constructor(A,e,t,r){if(new.target===C)throw new TypeError("Cannot construct AsciiRenderer instances directly");this.p5=A,this.grid=e,this.characterSet=t,this.options=r}updateOptions(A){this.options={...this.options,...A}}render(A){throw new Error("Must implement render method")}getOutputFramebuffer(){return this.outputFramebuffer}}class d extends C{constructor(A,e,t,r){super(A,e,t,r),this.shader=this.p5.createShader(E,"precision highp float;\n#define GLSLIFY 1\nuniform sampler2D u_characterTexture;uniform float u_charsetCols;uniform float u_charsetRows;uniform int u_totalChars;uniform sampler2D u_sketchTexture;uniform vec2 u_gridCellDimensions;uniform vec2 u_gridPixelDimensions;uniform vec2 u_gridOffsetDimensions;uniform vec3 u_characterColor;uniform int u_characterColorMode;uniform vec3 u_backgroundColor;uniform int u_backgroundColorMode;uniform float u_rotationAngle;uniform int u_invertMode;mat2 rotate2D(float angle){float s=sin(angle);float c=cos(angle);return mat2(c,-s,s,c);}void main(){vec2 adjustedCoord=(gl_FragCoord.xy-u_gridOffsetDimensions)/u_gridPixelDimensions;if(adjustedCoord.x<0.0||adjustedCoord.x>1.0||adjustedCoord.y<0.0||adjustedCoord.y>1.0){gl_FragColor=vec4(u_backgroundColor,1.0);return;}vec2 gridCoord=adjustedCoord*u_gridCellDimensions;vec2 cellCoord=floor(gridCoord);vec2 centerCoord=cellCoord+vec2(0.5);vec2 baseCoord=centerCoord/u_gridCellDimensions;vec4 sketchColor;sketchColor=texture2D(u_sketchTexture,baseCoord);float brightness=dot(sketchColor.rgb,vec3(0.299,0.587,0.114));int charIndex=int(brightness*float(u_totalChars));if(charIndex>u_totalChars-1){charIndex=u_totalChars-1;}int charCol=charIndex-(charIndex/int(u_charsetCols))*int(u_charsetCols);int charRow=charIndex/int(u_charsetCols);vec2 charCoord=vec2(float(charCol)/u_charsetCols,float(charRow)/u_charsetRows);vec2 fractionalPart=fract(gridCoord)-0.5;fractionalPart=rotate2D(u_rotationAngle)*fractionalPart;fractionalPart+=0.5;vec2 cellMin=charCoord;vec2 cellMax=charCoord+vec2(1.0/u_charsetCols,1.0/u_charsetRows);vec2 texCoord=charCoord+fractionalPart*vec2(1.0/u_charsetCols,1.0/u_charsetRows);bool outsideBounds=any(lessThan(texCoord,cellMin))||any(greaterThan(texCoord,cellMax));vec4 charColor=outsideBounds ? vec4(u_backgroundColor,1.0): texture2D(u_characterTexture,texCoord);if(u_invertMode==1){charColor.a=1.0-charColor.a;charColor.rgb=vec3(1.0);}vec4 finalColor=(u_characterColorMode==0)? vec4(sketchColor.rgb*charColor.rgb,charColor.a): vec4(u_characterColor*charColor.rgb,charColor.a);if(u_backgroundColorMode==0){gl_FragColor=mix(vec4(sketchColor.rgb,1.0),finalColor,charColor.a);}else{gl_FragColor=mix(vec4(u_backgroundColor,1.0),finalColor,charColor.a);}if(outsideBounds){gl_FragColor=(u_backgroundColorMode==0)?(u_invertMode==1 ?(u_characterColorMode==0 ? vec4(sketchColor.rgb,1.0): vec4(u_characterColor,1.0)): vec4(sketchColor.rgb,1.0)):(u_invertMode==1 ?(u_characterColorMode==0 ? vec4(sketchColor.rgb,1.0): vec4(u_characterColor,1.0)): vec4(u_backgroundColor,1.0));}}"),this.outputFramebuffer=this.p5.createFramebuffer({depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST})}render(A){this.outputFramebuffer.begin(),this.p5.shader(this.shader),this.shader.setUniform("u_characterTexture",this.characterSet.texture),this.shader.setUniform("u_charsetCols",this.characterSet.charsetCols),this.shader.setUniform("u_charsetRows",this.characterSet.charsetRows),this.shader.setUniform("u_totalChars",this.characterSet.characters.length),this.shader.setUniform("u_sketchTexture",A),this.shader.setUniform("u_gridPixelDimensions",[this.grid.width,this.grid.height]),this.shader.setUniform("u_gridOffsetDimensions",[this.grid.offsetX,this.grid.offsetY]),this.shader.setUniform("u_gridCellDimensions",[this.grid.cols,this.grid.rows]),this.shader.setUniform("u_characterColor",this.options.characterColor),this.shader.setUniform("u_characterColorMode",this.options.characterColorMode),this.shader.setUniform("u_backgroundColor",this.options.backgroundColor),this.shader.setUniform("u_backgroundColorMode",this.options.backgroundColorMode),this.shader.setUniform("u_invertMode",this.options.invertMode),this.shader.setUniform("u_rotationAngle",this.p5.radians(this.options.rotationAngle)),this.p5.rect(0,0,this.p5.width,this.p5.height),this.outputFramebuffer.end()}}class u extends C{constructor(A,e,t,r,o){var i,s,n;super(A,e,t,o),this.asciiRenderer=r,this.sobelShader=this.p5.createShader(E,"precision highp float;\n#define GLSLIFY 1\nvarying vec2 v_texCoord;uniform sampler2D u_texture;uniform vec2 u_textureSize;uniform float u_threshold;void main(){vec2 texelSize=1.0/u_textureSize;float kernelX[9];float kernelY[9];kernelX[0]=-1.0;kernelX[1]=0.0;kernelX[2]=1.0;kernelX[3]=-2.0;kernelX[4]=0.0;kernelX[5]=2.0;kernelX[6]=-1.0;kernelX[7]=0.0;kernelX[8]=1.0;kernelY[0]=-1.0;kernelY[1]=-2.0;kernelY[2]=-1.0;kernelY[3]=0.0;kernelY[4]=0.0;kernelY[5]=0.0;kernelY[6]=1.0;kernelY[7]=2.0;kernelY[8]=1.0;vec3 texColor[9];for(int i=0;i<3;i++){for(int j=0;j<3;j++){texColor[i*3+j]=texture2D(u_texture,v_texCoord+vec2(float(i-1),float(j-1))*texelSize).rgb;}}vec3 sobelX=vec3(0.0);vec3 sobelY=vec3(0.0);for(int i=0;i<9;i++){sobelX+=kernelX[i]*texColor[i];sobelY+=kernelY[i]*texColor[i];}vec3 sobel=sqrt(sobelX*sobelX+sobelY*sobelY);float intensity=length(sobel)/sqrt(3.0);float angleDeg=degrees(atan(sobelY.r,sobelX.r));vec3 edgeColor=vec3(0.0);if(intensity>u_threshold){if(angleDeg>=-22.5&&angleDeg<22.5){edgeColor=vec3(0.1);}else if(angleDeg>=22.5&&angleDeg<67.5){edgeColor=vec3(0.2);}else if(angleDeg>=67.5&&angleDeg<112.5){edgeColor=vec3(0.3);}else if(angleDeg>=112.5&&angleDeg<157.5){edgeColor=vec3(0.4);}else if(angleDeg>=157.5||angleDeg<-157.5){edgeColor=vec3(0.6);}else if(angleDeg>=-157.5&&angleDeg<-112.5){edgeColor=vec3(0.7);}else if(angleDeg>=-112.5&&angleDeg<-67.5){edgeColor=vec3(0.8);}else if(angleDeg>=-67.5&&angleDeg<-22.5){edgeColor=vec3(0.9);}}gl_FragColor=vec4(edgeColor,1.0);}"),this.sampleShader=this.p5.createShader(E,(i=16,s=this.grid.cellHeight,n=this.grid.cellWidth,`\nprecision highp float;\n\nuniform sampler2D u_image;\nuniform vec2 u_imageSize;\nuniform vec2 u_gridCellDimensions;\nuniform int u_threshold;\n\nconst vec3 BLACK = vec3(0.0, 0.0, 0.0);\nconst int MAX_HISTOGRAM_SIZE = ${i};\nconst int SAMPLES_PER_ROW = ${s};\nconst int SAMPLES_PER_COL = ${n};\n\nvec3 colorHistogram[MAX_HISTOGRAM_SIZE];\nint countHistogram[MAX_HISTOGRAM_SIZE];\n\nfloat round(float value) {\n    return floor(value + 0.5);\n}\n\nvoid main() {\n    vec2 bufferDimensions = u_gridCellDimensions;\n    vec2 imageDimensions = u_imageSize;\n    vec2 gridCellDimensions = vec2(imageDimensions.x / bufferDimensions.x, imageDimensions.y / bufferDimensions.y);\n\n    ivec2 coords = ivec2(gl_FragCoord.xy);\n    int gridX = coords.x;\n    int gridY = coords.y;\n\n    // Calculate the origin of the cell in the image\n    ivec2 cellOrigin = ivec2(round(float(gridX) * gridCellDimensions.x), round(float(gridY) * gridCellDimensions.y));\n    int nonBlackCount = 0;\n\n    // Initialize histograms\n    for (int i = 0; i < MAX_HISTOGRAM_SIZE; i++) {\n        colorHistogram[i] = BLACK;\n        countHistogram[i] = 0;\n    }\n\n    // Iterate over the cell and populate the histograms\n    for (int i = 0; i < SAMPLES_PER_COL; i++) {\n        for (int j = 0; j < SAMPLES_PER_ROW; j++) {\n            ivec2 pixelCoords = cellOrigin + ivec2(i, j);\n            // Check bounds\n            if (pixelCoords.x < 0 || pixelCoords.y < 0 || pixelCoords.x >= int(imageDimensions.x) || pixelCoords.y >= int(imageDimensions.y)) {\n                continue;\n            }\n            \n            // Normalize pixel coordinates when sampling from the texture\n            vec2 normalizedCoords = (vec2(pixelCoords) + 0.5) / imageDimensions; // +0.5 for pixel center\n            vec3 color = texture2D(u_image, normalizedCoords).rgb;\n\n            // Ignore black pixels\n            if (color == BLACK) {\n                continue;\n            }\n\n            nonBlackCount++;\n\n            // Check if the color already exists in the histogram\n            bool found = false;\n            for (int k = 0; k < MAX_HISTOGRAM_SIZE; k++) {\n                // colorHistogram[k] can be checked directly\n                // However, floating-point comparison can be imprecise; consider comparing within a small epsilon if needed\n                if (colorHistogram[k] == color) {\n                    countHistogram[k]++;\n                    found = true;\n                    break;\n                }\n            }\n\n            // If the color was not found, add it to the histogram at the first available slot\n            if (!found) {\n                for (int m = 0; m < MAX_HISTOGRAM_SIZE; m++) {\n                    if (countHistogram[m] == 0) {\n                        colorHistogram[m] = color;\n                        countHistogram[m] = 1;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    vec3 mostFrequentColor = BLACK;\n    int highestCount = 0;\n\n    // Find the most frequent color\n    for (int k = 0; k < MAX_HISTOGRAM_SIZE; k++) {\n        if (countHistogram[k] > highestCount) {\n            mostFrequentColor = colorHistogram[k];\n            highestCount = countHistogram[k];\n        }\n    }\n\n    // If the number of non-black pixels is below the threshold, output black, otherwise output the most frequent color\n    if (nonBlackCount < u_threshold) {\n        gl_FragColor = vec4(BLACK, 1.0);\n    } else {\n        gl_FragColor = vec4(mostFrequentColor, 1.0);\n    }\n}\n`)),this.shader=this.p5.createShader(E,"precision highp float;\n#define GLSLIFY 1\nuniform sampler2D u_characterTexture;uniform float u_charsetCols;uniform float u_charsetRows;uniform int u_totalChars;uniform sampler2D u_sketchTexture;uniform sampler2D u_edgesTexture;uniform sampler2D u_asciiBrightnessTexture;uniform vec2 u_gridCellDimensions;uniform vec2 u_gridPixelDimensions;uniform vec2 u_gridOffsetDimensions;uniform vec3 u_characterColor;uniform int u_characterColorMode;uniform vec3 u_backgroundColor;uniform int u_backgroundColorMode;uniform float u_rotationAngle;uniform int u_invertMode;uniform bool u_brightnessEnabled;uniform vec2 u_resolution;mat2 rotate2D(float angle){float s=sin(angle);float c=cos(angle);return mat2(c,-s,s,c);}void main(){vec2 adjustedCoord=(gl_FragCoord.xy-u_gridOffsetDimensions)/u_gridPixelDimensions;if(adjustedCoord.x<0.0||adjustedCoord.x>1.0||adjustedCoord.y<0.0||adjustedCoord.y>1.0){gl_FragColor=vec4(u_backgroundColor,1.0);return;}vec2 gridCoord=adjustedCoord*u_gridCellDimensions;vec2 cellCoord=floor(gridCoord);vec2 centerCoord=cellCoord+vec2(0.5);vec2 baseCoord=centerCoord/u_gridCellDimensions;vec4 edgeColor;vec4 sketchColor;edgeColor=texture2D(u_edgesTexture,baseCoord);sketchColor=texture2D(u_sketchTexture,baseCoord);if(edgeColor.rgb==vec3(0.0)){if(u_brightnessEnabled){gl_FragColor=texture2D(u_asciiBrightnessTexture,gl_FragCoord.xy/u_resolution);}else{gl_FragColor=vec4(u_backgroundColor,1.0);}return;}int charIndex=int(edgeColor.r*float(u_totalChars));if(charIndex>u_totalChars-1){charIndex=u_totalChars-1;}int charCol=charIndex-(charIndex/int(u_charsetCols))*int(u_charsetCols);int charRow=charIndex/int(u_charsetCols);vec2 charCoord=vec2(float(charCol)/u_charsetCols,float(charRow)/u_charsetRows);vec2 fractionalPart=fract(gridCoord)-0.5;fractionalPart=rotate2D(u_rotationAngle)*fractionalPart;fractionalPart+=0.5;vec2 cellMin=charCoord;vec2 cellMax=charCoord+vec2(1.0/u_charsetCols,1.0/u_charsetRows);vec2 texCoord=charCoord+fractionalPart*vec2(1.0/u_charsetCols,1.0/u_charsetRows);bool outsideBounds=any(lessThan(texCoord,cellMin))||any(greaterThan(texCoord,cellMax));vec4 charColor=outsideBounds ? vec4(u_backgroundColor,1.0): texture2D(u_characterTexture,texCoord);if(u_invertMode==1){charColor.a=1.0-charColor.a;charColor.rgb=vec3(1.0);}vec4 finalColor=(u_characterColorMode==0)? vec4(sketchColor.rgb*charColor.rgb,charColor.a): vec4(u_characterColor*charColor.rgb,charColor.a);if(u_backgroundColorMode==0){gl_FragColor=mix(vec4(sketchColor.rgb,1.0),finalColor,charColor.a);}else{gl_FragColor=mix(vec4(u_backgroundColor,1.0),finalColor,charColor.a);}if(outsideBounds){gl_FragColor=(u_backgroundColorMode==0)?(u_invertMode==1 ?(u_characterColorMode==0 ? vec4(sketchColor.rgb,1.0): vec4(u_characterColor,1.0)): vec4(sketchColor.rgb,1.0)):(u_invertMode==1 ?(u_characterColorMode==0 ? vec4(sketchColor.rgb,1.0): vec4(u_characterColor,1.0)): vec4(u_backgroundColor,1.0));}}"),this.sobelFramebuffer=this.p5.createFramebuffer({depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST}),this.sampleFramebuffer=this.p5.createFramebuffer({width:this.grid.cols,height:this.grid.rows,depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST}),this.outputFramebuffer=this.p5.createFramebuffer({depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST})}resizeFramebuffers(){this.sampleFramebuffer.resize(this.grid.cols,this.grid.rows)}setAsciiRenderer(A){this.asciiRenderer=A}render(A){this.sobelFramebuffer.begin(),this.p5.shader(this.sobelShader),this.sobelShader.setUniform("u_texture",A),this.sobelShader.setUniform("u_textureSize",[this.p5.width,this.p5.height]),this.sobelShader.setUniform("u_threshold",this.options.sobelThreshold),this.p5.rect(0,0,this.p5.width,this.p5.height),this.sobelFramebuffer.end(),this.sampleFramebuffer.begin(),this.p5.shader(this.sampleShader),this.sampleShader.setUniform("u_imageSize",[this.p5.width,this.p5.height]),this.sampleShader.setUniform("u_image",this.sobelFramebuffer),this.sampleShader.setUniform("u_gridCellDimensions",[this.grid.cols,this.grid.rows]),this.sampleShader.setUniform("u_threshold",this.options.sampleThreshold),this.p5.rect(0,0,this.p5.width,this.p5.height),this.sampleFramebuffer.end(),this.outputFramebuffer.begin(),this.p5.shader(this.shader),this.shader.setUniform("u_resolution",[this.p5.width,this.p5.height]),this.shader.setUniform("u_characterTexture",this.characterSet.texture),this.shader.setUniform("u_charsetCols",this.characterSet.charsetCols),this.shader.setUniform("u_charsetRows",this.characterSet.charsetRows),this.shader.setUniform("u_totalChars",this.characterSet.characters.length),this.shader.setUniform("u_sketchTexture",A),this.shader.setUniform("u_asciiBrightnessTexture",this.asciiRenderer.getOutputFramebuffer()),this.shader.setUniform("u_edgesTexture",this.sampleFramebuffer),this.shader.setUniform("u_gridPixelDimensions",[this.grid.width,this.grid.height]),this.shader.setUniform("u_gridOffsetDimensions",[this.grid.offsetX,this.grid.offsetY]),this.shader.setUniform("u_gridCellDimensions",[this.grid.cols,this.grid.rows]),this.shader.setUniform("u_characterColor",this.options.characterColor),this.shader.setUniform("u_characterColorMode",this.options.characterColorMode),this.shader.setUniform("u_backgroundColor",this.options.backgroundColor),this.shader.setUniform("u_backgroundColorMode",this.options.backgroundColorMode),this.shader.setUniform("u_invertMode",this.options.invertMode),this.shader.setUniform("u_brightnessEnabled",this.asciiRenderer.options.enabled),this.shader.setUniform("u_rotationAngle",this.p5.radians(this.options.rotationAngle)),this.p5.rect(0,0,this.p5.width,this.p5.height),this.outputFramebuffer.end()}}class f extends C{constructor(A,e,t,r){var o,i,s,n;super(A,e,t,r),this.characterSelectionShader=this.p5.createShader(E,(o=this.characterSet.fontSize,i=this.characterSet.characters.length,`\nprecision highp float;\n\n// Uniforms for character texture and its grid dimensions\nuniform sampler2D u_characterTexture;\nuniform float u_charsetCols;\nuniform float u_charsetRows;\n\n// Uniforms for the sketch texture and grid configurations\nuniform sampler2D u_sketchTexture;\nuniform vec2 u_gridPixelDimensions;      // Size of the grid in pixels\nuniform vec2 u_gridCellDimensions;       // Number of cells in the grid (columns, rows)\n\nconst int sampleSize = ${o};\nconst int totalChars = ${i};\n\nvoid main() {\n    // Get the grid cell coordinate (integer)\n    vec2 cellCoord = floor(gl_FragCoord.xy);\n\n    // Compute the size of each cell in pixels\n    vec2 cellSizeInPixels = u_gridPixelDimensions / u_gridCellDimensions;\n\n    // Compute the range of the cell in texture coordinates (0 to 1)\n    vec2 cellStartTexCoord = (cellCoord * cellSizeInPixels) / u_gridPixelDimensions;\n    vec2 cellEndTexCoord = ((cellCoord + vec2(1.0)) * cellSizeInPixels) / u_gridPixelDimensions;\n\n    float minError = 1.0 / 0.0; // Infinity\n    int bestCharIndex = 0;\n\n    for (int charIndex = 0; charIndex < ${i}; charIndex++) {\n        float error = 0.0;\n\n        int charRow = charIndex / int(u_charsetCols);\n        int charCol = charIndex - int(u_charsetCols) * charRow;\n        vec2 charBaseCoord = vec2(float(charCol) / u_charsetCols, float(charRow) / u_charsetRows);\n        vec2 charSize = vec2(1.0 / u_charsetCols, 1.0 / u_charsetRows);\n\n        for (int dy = 0; dy < ${o}; dy++) {\n            for (int dx = 0; dx < ${o}; dx++) {\n                vec2 sampleOffset = (vec2(float(dx) + 0.5, float(dy) + 0.5) / float(${o}));\n\n                // Sample in the sketch texture\n                vec2 sketchSampleCoord = cellStartTexCoord + sampleOffset * (cellEndTexCoord - cellStartTexCoord);\n                float sketchPixel = texture2D(u_sketchTexture, sketchSampleCoord).r;\n\n                // Sample in the character texture\n                vec2 charSampleCoord = charBaseCoord + sampleOffset * charSize;\n                float charPixel = texture2D(u_characterTexture, charSampleCoord).r;\n\n                error += pow(sketchPixel - charPixel, 2.0);\n            }\n        }\n\n        // Normalize the error\n        error /= float(${o} * ${o});\n\n        if (error < minError) {\n            minError = error;\n            bestCharIndex = charIndex;\n        }\n    }\n\n    // Encode the bestCharIndex into two channels: red and green\n    float lowerByte = float(bestCharIndex) - 256.0 * floor(float(bestCharIndex) / 256.0);\n    float upperByte = floor(float(bestCharIndex) / 256.0);\n\n    float encodedR = lowerByte / 255.0;\n    float encodedG = upperByte / 255.0;\n\n    gl_FragColor = vec4(encodedR, encodedG, 0.0, 1.0);\n}\n  `)),this.brightnessSampleShader=this.p5.createShader(E,(s=this.grid.cellHeight,n=this.grid.cellWidth,`\n// Enhanced Fragment Shader for Average Brightness Calculation\nprecision highp float; // Use high precision for better accuracy\n\n// Uniforms\nuniform sampler2D u_inputImage;\nuniform vec2 u_inputImageSize;\nuniform int u_gridCols;\nuniform int u_gridRows;\n\n// Constants\nconst int SAMPLES_PER_ROW = ${s};\nconst int SAMPLES_PER_COL = ${n};\n\nvoid main() {\n    // Calculate the size of each grid cell in pixels\n    vec2 cellSize = u_inputImageSize / vec2(float(u_gridCols), float(u_gridRows));\n\n    // Determine the current fragment's grid position\n    // gl_FragCoord starts at (0.5, 0.5) for the first pixel\n    vec2 fragCoord = floor(gl_FragCoord.xy);\n    vec2 inputGridPos = fragCoord * cellSize;\n\n    // Initialize brightness accumulator\n    float brightnessSum = 0.0;\n\n    // Total number of samples\n    float totalSamples = float(SAMPLES_PER_ROW * SAMPLES_PER_COL);\n\n    // Iterate over sample points within the grid cell\n    for(int i = 0; i < SAMPLES_PER_ROW; i++) {\n        for(int j = 0; j < SAMPLES_PER_COL; j++) {\n            // Calculate normalized texture coordinates for the sample\n            vec2 offset = (vec2(float(i), float(j)) + 0.5) * (cellSize / vec2(float(SAMPLES_PER_ROW), float(SAMPLES_PER_COL)));\n            vec2 texCoord = (inputGridPos + offset) / u_inputImageSize;\n\n            // Clamp texture coordinates to [0, 1] to prevent sampling outside the image\n            texCoord = clamp(texCoord, 0.0, 1.0);\n\n            // Sample the color from the input image\n            vec4 sampledColor = texture2D(u_inputImage, texCoord);\n\n            // Calculate brightness using luminance formula\n            float brightness = 0.299 * sampledColor.r + 0.587 * sampledColor.g + 0.114 * sampledColor.b;\n\n            // Accumulate brightness\n            brightnessSum += brightness;\n        }\n    }\n\n    // Compute average brightness\n    float averageBrightness = brightnessSum / totalSamples;\n\n    // Output the average brightness as a grayscale color with full opacity\n    gl_FragColor = vec4(vec3(averageBrightness), 1.0);\n}\n`)),this.colorSampleShader=this.p5.createShader(E,((A,e,t)=>`\n// Refactored Fragment Shader with Conditional Fallback for u_colorRank == 2\nprecision mediump float;\n\n// Uniforms\nuniform sampler2D u_inputImage;\nuniform sampler2D u_inputImageBW; // Black and white image\nuniform vec2 u_inputImageSize;\nuniform int u_gridCols;\nuniform int u_gridRows;\nuniform int u_colorRank;\n\n// Constants\nconst int NUM_SLOTS = ${A};\nconst int SAMPLES_PER_ROW = ${e};\nconst int SAMPLES_PER_COL = ${t};\n\nvoid main() {\n    // Calculate the size of each grid cell\n    vec2 cellSize = u_inputImageSize / vec2(float(u_gridCols), float(u_gridRows));\n\n    // Determine the current fragment's grid position\n    vec2 fragCoord = floor(gl_FragCoord.xy);\n    vec2 inputGridPos = fragCoord * cellSize;\n\n    // Calculate the center texture coordinate for saving the initial pixel color\n    vec2 centerOffset = cellSize * 0.5;\n    vec2 centerTexCoord = (inputGridPos + centerOffset) / u_inputImageSize;\n    vec4 savedColor = texture2D(u_inputImage, centerTexCoord);\n\n    // Initialize color slots and counts\n    vec4 colors[NUM_SLOTS];\n    float counts[NUM_SLOTS];\n    for(int i = 0; i < NUM_SLOTS; i++) {\n        colors[i] = vec4(0.0);\n        counts[i] = 0.0;\n    }\n\n    // Iterate over sample points within the grid cell\n    for(int i = 0; i < SAMPLES_PER_ROW; i++) {\n        for(int j = 0; j < SAMPLES_PER_COL; j++) {\n            // Calculate normalized texture coordinates for the sample\n            vec2 offset = (vec2(float(i), float(j)) + 0.5) * (cellSize / vec2(float(SAMPLES_PER_ROW), float(SAMPLES_PER_COL)));\n            vec2 texCoord = (inputGridPos + offset) / u_inputImageSize;\n\n            // Sample the color from the input image\n            vec4 sampledColor = texture2D(u_inputImage, texCoord);\n\n            // Sample the corresponding pixel from the black and white image\n            vec4 bwColor = texture2D(u_inputImageBW, texCoord);\n            float isWhite = step(0.5, bwColor.r); // Assuming grayscale, check if red channel is >= 0.5\n\n            // Determine if the current pixel should be considered based on u_colorRank\n            bool shouldConsider = false;\n            if(u_colorRank == 1 && isWhite > 0.5) {\n                shouldConsider = true;\n            }\n            else if(u_colorRank == 2 && isWhite <= 0.5) {\n                shouldConsider = true;\n            }\n\n            // Skip this pixel if it doesn't meet the criteria\n            if(!shouldConsider) {\n                continue;\n            }\n\n            // Find a matching color slot\n            bool matched = false;\n            for(int k = 0; k < NUM_SLOTS; k++) {\n                if(distance(sampledColor, colors[k]) < 0.001) {\n                    counts[k] += 1.0;\n                    matched = true;\n                    break;\n                }\n            }\n\n            // Assign to a new slot if no match is found\n            if(!matched) {\n                for(int k = 0; k < NUM_SLOTS; k++) {\n                    if(counts[k] == 0.0) {\n                        colors[k] = sampledColor;\n                        counts[k] = 1.0;\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    // Track the top color based on counts\n    float topCount = 0.0;\n    vec4 topColor = vec4(0.0);\n\n    for(int k = 0; k < NUM_SLOTS; k++) {\n        float currentCount = counts[k];\n        vec4 currentColor = colors[k];\n\n        if(currentCount > topCount) {\n            topCount = currentCount;\n            topColor = currentColor;\n        }\n    }\n\n    // If u_colorRank is 2 and no pixels were considered, use the savedColor instead of black\n    if(u_colorRank == 2 && topCount == 0.0) {\n        topColor = savedColor;\n    }\n\n    // Output the color with full opacity\n    gl_FragColor = vec4(topColor.rgb, 1.0);\n}\n`)(16,this.grid.cellHeight,this.grid.cellWidth)),this.brightnessSplitShader=this.p5.createShader(E,"precision mediump float;\n#define GLSLIFY 1\nuniform sampler2D u_inputImage;uniform sampler2D u_brightnessTexture;uniform vec2 u_inputImageSize;uniform int u_gridCols;uniform int u_gridRows;const float EPSILON=0.01;void main(){vec2 fragCoord=gl_FragCoord.xy;float cellWidth=u_inputImageSize.x/float(u_gridCols);float cellHeight=u_inputImageSize.y/float(u_gridRows);float gridX=floor(fragCoord.x/cellWidth);float gridY=floor(fragCoord.y/cellHeight);gridX=clamp(gridX,0.0,float(u_gridCols-1));gridY=clamp(gridY,0.0,float(u_gridRows-1));vec2 brightnessTexCoord=(vec2(gridX,gridY)+0.5)/vec2(float(u_gridCols),float(u_gridRows));float averageBrightness=texture2D(u_brightnessTexture,brightnessTexCoord).r;vec2 imageTexCoord=fragCoord/u_inputImageSize;vec4 originalColor=texture2D(u_inputImage,imageTexCoord);float fragmentBrightness=0.299*originalColor.r+0.587*originalColor.g+0.114*originalColor.b;float brightnessDifference=fragmentBrightness-averageBrightness;float finalColorValue;if(brightnessDifference<-EPSILON){finalColorValue=0.0;}else{finalColorValue=1.0;}gl_FragColor=vec4(vec3(finalColorValue),1.0);}"),this.shader=this.p5.createShader(E,"precision highp float;\n#define GLSLIFY 1\nuniform sampler2D u_characterTexture;uniform float u_charsetCols;uniform float u_charsetRows;uniform sampler2D u_primaryColorTexture;uniform sampler2D u_secondaryColorTexture;uniform sampler2D u_charIndexTexture;uniform vec2 u_gridOffsetDimensions;uniform vec2 u_gridPixelDimensions;uniform vec2 u_gridCellDimensions;uniform vec3 u_characterColor;uniform int u_characterColorMode;uniform vec3 u_backgroundColor;uniform int u_backgroundColorMode;uniform int u_invertMode;void main(){vec2 adjustedCoord=(gl_FragCoord.xy-u_gridOffsetDimensions)/u_gridPixelDimensions;if(adjustedCoord.x<0.0||adjustedCoord.x>1.0||adjustedCoord.y<0.0||adjustedCoord.y>1.0){gl_FragColor=vec4(u_backgroundColor,1.0);return;}vec2 gridCoord=adjustedCoord*u_gridCellDimensions;vec2 cellCoord=floor(gridCoord);vec2 charIndexTexCoord=(cellCoord+vec2(0.5))/u_gridCellDimensions;vec2 encodedIndexVec=texture2D(u_charIndexTexture,charIndexTexCoord).rg;int bestCharIndex=int(encodedIndexVec.r*255.0+0.5)+int(encodedIndexVec.g*255.0+0.5)*256;int bestCharRow=bestCharIndex/int(u_charsetCols);int bestCharCol=bestCharIndex-int(u_charsetCols)*bestCharRow;vec2 bestCharBaseCoord=vec2(float(bestCharCol)/u_charsetCols,float(bestCharRow)/u_charsetRows);vec2 bestCharSize=vec2(1.0/u_charsetCols,1.0/u_charsetRows);vec2 texCoord=bestCharBaseCoord+fract(gridCoord)*bestCharSize;vec4 charColor=texture2D(u_characterTexture,texCoord);if(u_invertMode==1){charColor.rgb=vec3(1.0)-charColor.rgb;charColor.a=1.0-charColor.a;}vec2 primaryTexCoord=(cellCoord+vec2(0.5))/u_gridCellDimensions;vec4 primaryColor=texture2D(u_primaryColorTexture,primaryTexCoord);vec4 secondaryColor=texture2D(u_secondaryColorTexture,primaryTexCoord);vec4 finalColor=(u_characterColorMode==0)? vec4(primaryColor.rgb*charColor.rgb,charColor.a): vec4(u_characterColor*charColor.rgb,charColor.a);vec4 backgroundColorFinal=(u_backgroundColorMode==0)? secondaryColor : vec4(u_backgroundColor,1.0);gl_FragColor=mix(backgroundColorFinal,finalColor,charColor.a);}"),this.brightnessSampleFramebuffer=this.p5.createFramebuffer({width:this.grid.cols,height:this.grid.rows,depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST}),this.brightnessSplitFramebuffer=this.p5.createFramebuffer({depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST}),this.primaryColorSampleFramebuffer=this.p5.createFramebuffer({width:this.grid.cols,height:this.grid.rows,depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST}),this.secondaryColorSampleFramebuffer=this.p5.createFramebuffer({width:this.grid.cols,height:this.grid.rows,depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST}),this.asciiCharacterFramebuffer=this.p5.createFramebuffer({width:this.grid.cols,height:this.grid.rows,depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST}),this.outputFramebuffer=this.p5.createFramebuffer({depthFormat:this.p5.UNSIGNED_INT,textureFiltering:this.p5.NEAREST})}resizeFramebuffers(){this.brightnessSampleFramebuffer.resize(this.grid.cols,this.grid.rows),this.primaryColorSampleFramebuffer.resize(this.grid.cols,this.grid.rows),this.secondaryColorSampleFramebuffer.resize(this.grid.cols,this.grid.rows),this.asciiCharacterFramebuffer.resize(this.grid.cols,this.grid.rows)}render(A){this.brightnessSampleFramebuffer.begin(),this.p5.shader(this.brightnessSampleShader),this.brightnessSampleShader.setUniform("u_inputImage",A),this.brightnessSampleShader.setUniform("u_inputImageSize",[this.p5.width,this.p5.height]),this.brightnessSampleShader.setUniform("u_gridCols",this.grid.cols),this.brightnessSampleShader.setUniform("u_gridRows",this.grid.rows),this.p5.rect(0,0,this.p5.width,this.p5.height),this.brightnessSampleFramebuffer.end(),this.brightnessSplitFramebuffer.begin(),this.p5.shader(this.brightnessSplitShader),this.brightnessSplitShader.setUniform("u_inputImage",A),this.brightnessSplitShader.setUniform("u_brightnessTexture",this.brightnessSampleFramebuffer),this.brightnessSplitShader.setUniform("u_inputImageSize",[this.p5.width,this.p5.height]),this.brightnessSplitShader.setUniform("u_gridCols",this.grid.cols),this.brightnessSplitShader.setUniform("u_gridRows",this.grid.rows),this.p5.rect(0,0,this.p5.width,this.p5.height),this.brightnessSplitFramebuffer.end(),this.primaryColorSampleFramebuffer.begin(),this.p5.shader(this.colorSampleShader),this.colorSampleShader.setUniform("u_inputImage",A),this.colorSampleShader.setUniform("u_inputImageBW",this.brightnessSplitFramebuffer),this.colorSampleShader.setUniform("u_inputImageSize",[this.p5.width,this.p5.height]),this.colorSampleShader.setUniform("u_gridCols",this.grid.cols),this.colorSampleShader.setUniform("u_gridRows",this.grid.rows),this.colorSampleShader.setUniform("u_colorRank",1),this.p5.rect(0,0,this.p5.width,this.p5.height),this.primaryColorSampleFramebuffer.end(),this.secondaryColorSampleFramebuffer.begin(),this.p5.shader(this.colorSampleShader),this.colorSampleShader.setUniform("u_inputImage",A),this.colorSampleShader.setUniform("u_inputImageBW",this.brightnessSplitFramebuffer),this.colorSampleShader.setUniform("u_inputImageSize",[this.p5.width,this.p5.height]),this.colorSampleShader.setUniform("u_gridCols",this.grid.cols),this.colorSampleShader.setUniform("u_gridRows",this.grid.rows),this.colorSampleShader.setUniform("u_colorRank",2),this.p5.rect(0,0,this.p5.width,this.p5.height),this.secondaryColorSampleFramebuffer.end(),this.asciiCharacterFramebuffer.begin(),this.p5.shader(this.characterSelectionShader),this.characterSelectionShader.setUniform("u_characterTexture",this.characterSet.texture),this.characterSelectionShader.setUniform("u_charsetCols",this.characterSet.charsetCols),this.characterSelectionShader.setUniform("u_charsetRows",this.characterSet.charsetRows),this.characterSelectionShader.setUniform("u_sketchTexture",this.brightnessSplitFramebuffer),this.characterSelectionShader.setUniform("u_gridCellDimensions",[this.grid.cols,this.grid.rows]),this.characterSelectionShader.setUniform("u_gridPixelDimensions",[this.grid.width,this.grid.height]),this.p5.rect(0,0,this.p5.width,this.p5.height),this.asciiCharacterFramebuffer.end(),this.outputFramebuffer.begin(),this.p5.shader(this.shader),this.shader.setUniform("u_charIndexTexture",this.asciiCharacterFramebuffer),this.shader.setUniform("u_resolution",[this.p5.width,this.p5.height]),this.shader.setUniform("u_characterTexture",this.characterSet.texture),this.shader.setUniform("u_primaryColorTexture",this.primaryColorSampleFramebuffer),this.shader.setUniform("u_secondaryColorTexture",this.secondaryColorSampleFramebuffer),this.shader.setUniform("u_charsetCols",this.characterSet.charsetCols),this.shader.setUniform("u_charsetRows",this.characterSet.charsetRows),this.shader.setUniform("u_totalChars",this.characterSet.characters.length),this.shader.setUniform("u_gridCellDimensions",[this.grid.cols,this.grid.rows]),this.shader.setUniform("u_gridPixelDimensions",[this.grid.width,this.grid.height]),this.shader.setUniform("u_gridOffsetDimensions",[this.grid.offsetX,this.grid.offsetY]),this.shader.setUniform("u_characterColor",this.options.characterColor),this.shader.setUniform("u_characterColorMode",this.options.characterColorMode),this.shader.setUniform("u_backgroundColor",this.options.backgroundColor),this.shader.setUniform("u_backgroundColorMode",this.options.backgroundColorMode),this.shader.setUniform("u_invertMode",this.options.invertMode),this.p5.rect(0,0,this.p5.width,this.p5.height),this.outputFramebuffer.end()}}class D{commonOptions={fontSize:16,gridDimensions:[0,0]};asciiOptions={renderMode:"brightness",enabled:!0,characters:"0123456789",characterColor:[1,1,1],characterColorMode:0,backgroundColor:[0,0,0],backgroundColorMode:1,invertMode:!1,rotationAngle:0};edgeOptions={enabled:!1,characters:"-/|\\-/|\\",characterColor:[1,1,1],characterColorMode:0,backgroundColor:[0,0,0],backgroundColorMode:1,invertMode:!1,sobelThreshold:.5,sampleThreshold:16,rotationAngle:0};colorPalette=new o;preEffectManager=new Q(this.colorPalette);afterEffectManager=new Q(this.colorPalette);asciiFramebufferDimensions={width:0,height:0};asciiCharacterSet=new c;edgeCharacterSet=new c;grid=new l({cellWidth:0,cellHeight:0});instanceMode=!1;instance(A){this.p5Instance=A,this.instanceMode=!0,this.p5Instance.preload=()=>{}}setup(){this.p5Instance.pixelDensity(1),this.asciiCharacterSet.setup({p5Instance:this.p5Instance,type:"ascii",font:this.font,characters:this.asciiOptions.characters,fontSize:this.commonOptions.fontSize}),this.edgeCharacterSet.setup({p5Instance:this.p5Instance,type:"edge",font:this.font,characters:this.edgeOptions.characters,fontSize:this.commonOptions.fontSize}),this.grid.resizeCellPixelDimensions(this.asciiCharacterSet.maxGlyphDimensions.width,this.asciiCharacterSet.maxGlyphDimensions.height),0!=this.commonOptions.gridDimensions[0]&&0!=this.commonOptions.gridDimensions[1]&&this.grid.resizeCellDimensions(this.commonOptions.gridDimensions[0],this.commonOptions.gridDimensions[1]),this.colorPalette.setup(),this.preEffectManager.setup(),this.afterEffectManager.setup(),this.brightnessRenderer=new d(this.p5Instance,this.grid,this.asciiCharacterSet,this.asciiOptions),this.accurateRenderer=new f(this.p5Instance,this.grid,this.asciiCharacterSet,this.asciiOptions);let A="brightness"===this.asciiOptions.renderMode?this.brightnessRenderer:this.accurateRenderer;this.edgeRenderer=new u(this.p5Instance,this.grid,this.edgeCharacterSet,A,this.edgeOptions),this.asciiFramebufferDimensions={width:this.p5Instance.width,height:this.p5Instance.height},this.sketchFramebuffer=this.p5Instance.createFramebuffer({depthFormat:this.p5Instance.UNSIGNED_INT,textureFiltering:this.p5Instance.NEAREST})}checkFramebufferDimensions(){this.asciiFramebufferDimensions.width===this.p5Instance.width&&this.asciiFramebufferDimensions.height===this.p5Instance.height||(this.asciiFramebufferDimensions.width=this.p5Instance.width,this.asciiFramebufferDimensions.height=this.p5Instance.height,0===this.commonOptions.gridDimensions[0]||0===this.commonOptions.gridDimensions[1]?this.grid.reset():this.grid._resizeGrid(),this.edgeRenderer.resizeFramebuffers(),this.accurateRenderer.resizeFramebuffers())}asciify(){this.preEffectManager.render(this.sketchFramebuffer);let A=this.preEffectManager.nextFramebuffer;if(this.asciiOptions.enabled){const e="accurate"===this.asciiOptions.renderMode?this.accurateRenderer:this.brightnessRenderer;e.render(A),A=e.getOutputFramebuffer()}this.edgeOptions.enabled&&(this.edgeRenderer.render(this.preEffectManager.nextFramebuffer,this.asciiOptions.enabled),A=this.edgeRenderer.getOutputFramebuffer()),this.afterEffectManager.render(A),this.p5Instance.clear(),this.p5Instance.image(this.afterEffectManager.nextFramebuffer,-this.p5Instance.width/2,-this.p5Instance.height/2),this.checkFramebufferDimensions()}setDefaultOptions(A,e,t){this.asciiOptions={...this.asciiOptions,...A},this.edgeOptions={...this.edgeOptions,...e},this.commonOptions={...this.commonOptions,...t},0!=this.p5Instance.frameCount&&(this.brightnessRenderer.updateOptions(A),this.edgeRenderer.updateOptions(e),this.accurateRenderer.updateOptions(A),A?.characters&&this.asciiCharacterSet.setCharacterSet(A.characters),e?.characters&&this.edgeCharacterSet.setCharacterSet(e.characters),t?.fontSize&&(this.asciiCharacterSet.setFontSize(t.fontSize),this.edgeCharacterSet.setFontSize(t.fontSize),this.grid.resizeCellPixelDimensions(this.asciiCharacterSet.maxGlyphDimensions.width,this.asciiCharacterSet.maxGlyphDimensions.height),this.edgeRenderer.resizeFramebuffers(),this.accurateRenderer.resizeFramebuffers()),A?.renderMode&&this.edgeRenderer.setAsciiRenderer("brightness"===A.renderMode?this.brightnessRenderer:this.accurateRenderer),t?.gridDimensions&&(0===t.gridDimensions[0]||0===t.gridDimensions[1]?this.grid.reset():this.grid.resizeCellDimensions(t.gridDimensions[0],t.gridDimensions[1]),this.edgeRenderer.resizeFramebuffers(),this.accurateRenderer.resizeFramebuffers()))}}class I{static hexToRgb(A){return[parseInt(A.slice(1,3),16),parseInt(A.slice(3,5),16),parseInt(A.slice(5,7),16)]}static rgbToShaderColor(A){return[A[0]/255,A[1]/255,A[2]/255]}static hexToShaderColor(A){return this.rgbToShaderColor(this.hexToRgb(A))}static compareVersions(A,e){const[t,r]=[A,e].map((A=>A.split(".").map(Number)));for(let A=0;A<Math.max(t.length,r.length);A++){const[e,o]=[t[A]??0,r[A]??0];if(e!==o)return e>o?1:-1}return 0}static deepMerge(A,e){const t={...A};for(const r of Object.keys(e))null===e[r]||"object"!=typeof e[r]||Array.isArray(e[r])||!(r in A)||"object"!=typeof A[r]||Array.isArray(A[r])?t[r]=e[r]:t[r]=this.deepMerge(A[r],e[r]);return t}}const P=new D;return"undefined"==typeof window||window.P5Asciify||(window.P5Asciify=D,window.p5asciify=P,window.preload=function(){}),A.prototype.setupP5Instance=function(){P.p5Instance||(P.p5Instance=this),P.grid.addInstance(P.p5Instance),P.colorPalette.addInstance(P.p5Instance),P.preEffectManager.addInstance(P.p5Instance),P.afterEffectManager.addInstance(P.p5Instance)},A.prototype.registerMethod("init",A.prototype.setupP5Instance),A.prototype.preloadAsciiFont=function(){P.p5Instance._incrementPreload(),P.font=P.p5Instance.loadFont("data:text/javascript;base64,r\n",(A=>{P.font=A}),(()=>{throw new h(`loadAsciiFont() | Failed to load font from path: '${font}'`)}))},A.prototype.registerMethod("beforePreload",A.prototype.preloadAsciiFont),A.prototype.loadAsciiFont=function(A){const e=A=>{P.font=A,P.p5Instance._decrementPreload(),P.p5Instance.frameCount>0&&(P.brightnessCharacterSet.setFontObject(A),P.edgeCharacterSet.setFontObject(A),P.grid.resizeCellPixelDimensions(P.brightnessCharacterSet.maxGlyphDimensions.width,P.brightnessCharacterSet.maxGlyphDimensions.height))};if("string"==typeof A)P.p5Instance.loadFont(A,(A=>{e(A)}),(()=>{throw new h(`loadAsciiFont() | Failed to load font from path: '${A}'`)}));else{if("object"!=typeof A)throw new h("loadAsciiFont() | Invalid font parameter. Expected a string or an object.");e(A)}},A.prototype.registerPreloadMethod("loadAsciiFont",A.prototype),A.prototype.setupAsciifier=function(){if(P.p5Instance._setupDone){if(P.p5Instance._renderer.drawingContext instanceof CanvasRenderingContext2D)throw new h("WebGL renderer is required for p5.asciify to work.");if(I.compareVersions(P.p5Instance.VERSION,"1.8.0")<0)throw new h("p5.asciify requires p5.js v1.8.0 or higher to work.");P.setup()}},A.prototype.registerMethod("afterSetup",A.prototype.setupAsciifier),A.prototype.resetAsciiGrid=function(){P.grid.reset(),P.sampleFramebuffer.resize(P.grid.cols,P.grid.rows)},A.prototype.setAsciiOptions=function(A){const e=["common","brightness","edge","ascii"],t=Object.keys(A).filter((A=>!e.includes(A)));t.length&&(console.warn(`P5Asciify: Unknown options detected (${t.join(", ")}). Refer to the documentation for valid options.`),t.forEach((e=>delete A[e]))),A.brightness&&console.warn("P5Asciify: The 'brightness' option is deprecated and will be removed in future releases. Use 'ascii' instead, which works the same way."),A.brightness&&!A.ascii&&(A.ascii=A.brightness);const{brightness:r,edge:o,common:i,ascii:s}=A;[r,o,s].forEach((A=>{A?.characterColor&&(A.characterColor=I.hexToShaderColor(A.characterColor)),A?.backgroundColor&&(A.backgroundColor=I.hexToShaderColor(A.backgroundColor))})),i?.fontSize&&(i.fontSize<1||i.fontSize>128)&&(console.warn(`P5Asciify: Font size ${i.fontSize} is out of bounds. It should be between 1 and 128. Font size not updated.`),delete i.fontSize),void 0!==o?.characters&&8!==o.characters.length&&(console.warn("P5Asciify: The edge character set must contain exactly 8 characters. Character set not updated."),delete o.characters),P.setDefaultOptions(s,o,i)},A.prototype.addAsciiEffect=function(A,e,t={}){const r={pre:P.preEffectManager,post:P.afterEffectManager}[A];if(!r)throw new h(`Invalid effect type '${A}'. Valid types are 'pre' and 'post'.`);if(!r.effectConstructors[e])throw new h(`Effect '${e}' does not exist! Available effects: ${Object.keys(r.effectConstructors).join(", ")}`);const o=Object.keys(r.effectParams[e]),i=Object.keys(t).filter((A=>!o.includes(A)));if(i.length>0)throw new h(`Invalid parameter(s) for effect '${e}': ${i.join(", ")}\nValid parameters are: ${o.join(", ")}`);return r.addEffect(e,t)},A.prototype.removeAsciiEffect=function(A){let e=!1;if(P.preEffectManager.hasEffect(A)&&(P.preEffectManager.removeEffect(A),e=!0),P.afterEffectManager.hasEffect(A)&&(P.afterEffectManager.removeEffect(A),e=!0),!e)throw new h("Effect instance not found in either pre or post effect managers.")},A.prototype.swapAsciiEffects=function(A,e){let t=null,r=null,o=-1,i=-1;if(P.preEffectManager.hasEffect(A))t=P.preEffectManager,o=t.getEffectIndex(A);else{if(!P.afterEffectManager.hasEffect(A))throw new h("Effect instance 1 not found in either pre or post effect managers.");t=P.afterEffectManager,o=t.getEffectIndex(A)}if(P.preEffectManager.hasEffect(e))r=P.preEffectManager,i=r.getEffectIndex(e);else{if(!P.afterEffectManager.hasEffect(e))throw new h("Effect instance 2 not found in either pre or post effect managers.");r=P.afterEffectManager,i=r.getEffectIndex(e)}if(t!==r){if(t.hasEffect(e)||r.hasEffect(A))throw new h("Effects cannot be swapped because one effect instance is already present in the other's manager.");t.removeEffect(A),r.removeEffect(e),t.addExistingEffectAtIndex(e,o),r.addExistingEffectAtIndex(A,i)}else t.swapEffects(A,e)},A.prototype.preDrawAddPush=function(){P.sketchFramebuffer.begin(),P.p5Instance.push()},A.prototype.registerMethod("pre",A.prototype.preDrawAddPush),A.prototype.postDrawAddPop=function(){P.p5Instance.pop(),P.sketchFramebuffer.end()},A.prototype.registerMethod("post",A.prototype.postDrawAddPop),A.prototype.asciify=function(){P.asciify()},A.prototype.registerMethod("post",A.prototype.asciify),P}));
