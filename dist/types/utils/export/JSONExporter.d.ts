import p5 from 'p5';
import { P5AsciifyGrid } from '../../Grid';
import { P5AsciifyFontManager } from '../../FontManager';
import { P5AsciifyRendererManager } from '../../renderers/RendererManager';
/**
 * Options for JSON export.
 */
export interface JSONExportOptions {
    /**
     * The filename to save the JSON file as. If not provided, a default filename is used.
     */
    filename?: string;
    /**
     * Whether to include empty/space cells in the output.
     * Default is `true`.
     */
    includeEmptyCells?: boolean;
    /**
     * Whether to pretty-print the JSON with indentation.
     * Default is `true`.
     */
    prettyPrint?: boolean;
}
/**
 * Utility class for exporting ASCII art generated by p5.asciify as a JSON file.
 * @ignore
 */
export declare class P5AsciifyJSONExporter {
    /**
     * The p5.js instance.
     */
    private p;
    /**
     * Creates a new JSON exporter.
     * @param p The p5.js instance
     */
    constructor(p: p5);
    /**
     * Generates the current ASCII output as a JSON string without downloading.
     * @param rendererManager The renderer manager containing framebuffers with ASCII data
     * @param grid The grid information for dimensions and cell sizes
     * @param fontManager The font manager with character data
     * @param options Options for JSON generation (excludes filename)
     * @returns JSON string representation of the ASCII output
     * @throws {@link P5AsciifyError} - If no renderer is available to fetch ASCII output from.
     */
    generateJSON(rendererManager: P5AsciifyRendererManager, grid: P5AsciifyGrid, fontManager: P5AsciifyFontManager, options?: Omit<JSONExportOptions, 'filename'>): string;
    /**
     * Exports the current ASCII output as a JSON file.
     * @param rendererManager The renderer manager containing framebuffers with ASCII data
     * @param grid The grid information for dimensions and cell sizes
     * @param fontManager The font manager with character data
     * @param options Options for JSON export
     * @throws {@link P5AsciifyError} - If no renderer is available to fetch ASCII output from.
     */
    saveJSON(rendererManager: P5AsciifyRendererManager, grid: P5AsciifyGrid, fontManager: P5AsciifyFontManager, options?: JSONExportOptions): void;
    /**
     * Converts RGBA values to a hex color string
     * @param r Red channel (0-255)
     * @param g Green channel (0-255)
     * @param b Blue channel (0-255)
     * @param a Alpha channel (0-255)
     * @returns Hex color string (e.g., "#RRGGBBAA")
     */
    private rgbaToHex;
    /**
     * Creates a downloadable JSON file and initiates the download
     * @param jsonContent The JSON content to download
     * @param filename The filename for the JSON file
     */
    private downloadJSON;
}
